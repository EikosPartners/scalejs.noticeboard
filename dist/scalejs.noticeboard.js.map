{"version":3,"sources":["../src/scalejs.noticeboard.js"],"names":["observable","computed","global","noticeboard","dictionary","subs","setValue","key","value","valueHasMutated","getValue","dict","peek","hasOwnProperty","item","subscribe","callback","sub","oldValue","val","newValue","push","remove","forEach","dispose","get","set","registerExtension","createNewNoticeboard"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AACA,IAAIA,aAAa,mBAAGA,UAApB;AAAA,IACIC,WAAW,mBAAGA,QADlB;AAAA,IAEIC,SAASC,aAFb;;AAIA,SAASA,WAAT,GAAuB;AACnB,QAAIC,aAAaJ,WAAW,EAAX,CAAjB;AAAA,QACIK,OAAO,EADX;;AAGA;;AAEA,aAASC,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC1B,YAAIJ,aAAaG,GAAb,CAAJ,EAAuB;AACnBH,yBAAaG,GAAb,EAAkBC,KAAlB;AACH,SAFD,MAEO;AACHJ,yBAAaG,GAAb,IAAoBP,WAAWQ,KAAX,CAApB;AACAJ,uBAAWK,eAAX;AACH;AACJ;AACD;AACA;AACA,aAASC,QAAT,CAAkBH,GAAlB,EAAuB;AACnB,YAAII,OAAOP,WAAWQ,IAAX,EAAX;;AAEA,YAAID,KAAKE,cAAL,CAAoBN,GAApB,CAAJ,EAA8B;AAC1B,gBAAIO,OAAOH,KAAKJ,GAAL,CAAX;AACA,mBAAOO,MAAP;AACH;AACD,eAAOV,aAAaG,GAAb,CAAP,CAPmB,CAOO;AAC7B;;AAED,aAASQ,SAAT,CAAmBR,GAAnB,EAAwBS,QAAxB,EAAkC;AAC9B,YAAIC,MAAMhB,SAAS,YAAY;AACvB,mBAAOS,SAASH,GAAT,CAAP;AACH,SAFK,CAAV;AAAA,YAGIW,QAHJ;;AAKAD,YAAIF,SAAJ,CAAc,UAAUI,GAAV,EAAe;AACzBD,uBAAWC,GAAX;AACH,SAFD,EAEG,IAFH,EAES,cAFT;;AAIAF,YAAIF,SAAJ,CAAc,UAAUK,QAAV,EAAoB;AAC9B,gBAAGA,aAAaF,QAAhB,EAA0B;AACtBF,yBAASI,QAAT;AACH;AACJ,SAJD;AAKAJ,iBAASC,KAAT,EAf8B,CAeb;AACjBZ,aAAKE,GAAL,IAAYF,KAAKE,GAAL,KAAa,EAAzB;AACAF,aAAKE,GAAL,EAAUc,IAAV,CAAeJ,GAAf;AACA,eAAOA,GAAP;AACH;;AAED,aAASK,MAAT,CAAgBf,GAAhB,EAAqB;AACjB,YAAIH,aAAaG,GAAb,CAAJ,EAAuB;AACnB,gBAAIF,KAAKE,GAAL,CAAJ,EAAe;AACXF,qBAAKE,GAAL,EAAUgB,OAAV,CAAkB,UAAUN,GAAV,EAAe;AAC7BA,wBAAIO,OAAJ;AACH,iBAFD;AAGH;AACD,mBAAOpB,aAAaG,GAAb,CAAP;AACAH,uBAAWK,eAAX;AACH;AACJ;;AAED,WAAO;AACHH,kBAAUA,QADP;AAEHI,kBAAUA,QAFP;AAGHe,aAAKf,QAHF;AAIHgB,aAAKpB,QAJF;AAKHS,mBAAWA,SALR;AAMHO,gBAAQA,MANL;AAOHlB,oBAAYA;AAPT,KAAP;AASH;;AAED,kBAAKuB,iBAAL,CAAuB;AACnBxB,iBAAa;AACTyB,8BAAsBzB,WADb;AAETD,gBAAQC;AAFC;AADM,CAAvB;;IASIG,Q,GAOAJ,M,CAPAI,Q;IACAI,Q,GAMAR,M,CANAQ,Q;IACAe,G,GAKAvB,M,CALAuB,G;IACAC,G,GAIAxB,M,CAJAwB,G;IACAX,S,GAGAb,M,CAHAa,S;IACAO,M,GAEApB,M,CAFAoB,M;IACAlB,U,GACAF,M,CADAE,U;QAIAE,Q,GAAAA,Q;QACAI,Q,GAAAA,Q;QACAe,G,GAAAA,G;QACAC,G,GAAAA,G;QACAX,S,GAAAA,S;QACAO,M,GAAAA,M;QACAlB,U,GAAAA,U;QACewB,oB,GAAfzB,W;kBAEW;AACXG,sBADW;AAEXI,sBAFW;AAGXe,YAHW;AAIXC,YAJW;AAKXX,wBALW;AAMXO,kBANW;AAOXlB,0BAPW;AAQXwB,0BAAuBzB;AARZ,C","file":"scalejs.noticeboard.js","sourcesContent":["import ko from 'knockout';\r\nimport core from 'scalejs.core';\r\nvar observable = ko.observable,\r\n    computed = ko.computed,\r\n    global = noticeboard();\r\n\r\nfunction noticeboard() {\r\n    var dictionary = observable({}),\r\n        subs = {};\r\n\r\n    // will set the value on an existing observable\r\n\r\n    function setValue(key, value) {\r\n        if (dictionary()[key]) {\r\n            dictionary()[key](value);\r\n        } else {\r\n            dictionary()[key] = observable(value);\r\n            dictionary.valueHasMutated();\r\n        }\r\n    }\r\n    // notify when key becomes available\r\n    // notify when value changes\r\n    function getValue(key) {\r\n        var dict = dictionary.peek();\r\n\r\n        if (dict.hasOwnProperty(key)) {\r\n            let item = dict[key];\r\n            return item();\r\n        }\r\n        return dictionary()[key]; // returns undefined\r\n    }\r\n\r\n    function subscribe(key, callback) {\r\n        var sub = computed(function () {\r\n                return getValue(key);\r\n            }),\r\n            oldValue;\r\n\r\n        sub.subscribe(function (val) {\r\n            oldValue = val;\r\n        }, null, 'beforeChange');\r\n\r\n        sub.subscribe(function (newValue) {\r\n            if(newValue !== oldValue) {\r\n                callback(newValue);\r\n            }\r\n        });\r\n        callback(sub()); // When initially called\r\n        subs[key] = subs[key] || [];\r\n        subs[key].push(sub);\r\n        return sub;\r\n    }\r\n\r\n    function remove(key) {\r\n        if (dictionary()[key]) {\r\n            if (subs[key]) {\r\n                subs[key].forEach(function (sub) {\r\n                    sub.dispose();\r\n                })\r\n            }\r\n            delete dictionary()[key];\r\n            dictionary.valueHasMutated();\r\n        }\r\n    }\r\n\r\n    return {\r\n        setValue: setValue,\r\n        getValue: getValue,\r\n        get: getValue,\r\n        set: setValue,\r\n        subscribe: subscribe,\r\n        remove: remove,\r\n        dictionary: dictionary\r\n    };\r\n}\r\n\r\ncore.registerExtension({\r\n    noticeboard: {\r\n        createNewNoticeboard: noticeboard,\r\n        global: noticeboard()\r\n    }\r\n});\r\n\r\n\r\nlet {\r\n    setValue,\r\n    getValue,\r\n    get,\r\n    set,\r\n    subscribe,\r\n    remove,\r\n    dictionary\r\n} = global;\r\n\r\nexport {\r\n    setValue,\r\n    getValue,\r\n    get,\r\n    set,\r\n    subscribe,\r\n    remove,\r\n    dictionary,\r\n    noticeboard as createNewNoticeboard\r\n}\r\nexport default {\r\n    setValue,\r\n    getValue,\r\n    get,\r\n    set,\r\n    subscribe,\r\n    remove,\r\n    dictionary,\r\n    createNewNoticeboard : noticeboard\r\n}\r\n\r\n\r\n\r\n"]}